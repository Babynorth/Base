<?xml version="1.0" encoding="UTF-8"?>
<beans
        xmlns:security="http://www.springframework.org/schema/security"
        xmlns="http://www.springframework.org/schema/beans"
        xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
        xsi:schemaLocation="http://www.springframework.org/schema/beans
                        http://www.springframework.org/schema/beans/spring-beans.xsd
                        http://www.springframework.org/schema/security
                        http://www.springframework.org/schema/security/spring-security.xsd">

    <security:http pattern="/common/**" security="none"/>
    <security:http pattern="/theme/**" security="none"/>
    <security:http pattern="/index.jsp" security="none"/>
    <security:http pattern="/captcha/captchaImage!execute" security="none"/>



    <!--是在用户没有登录时用于引导用户进行登录认证的，在实际应用中应根据具体的认证机制选择对应的AuthenticationEntryPoint-->
    <bean id="authenticationEntryPoint" class="com.babynorth.security.LoginUrlAuthenticationEntryPoint">
        <property name="loginFormUrl" value="/login/login!main.action" />
    </bean>

    <security:http  auto-config="true"  access-decision-manager-ref="accessDecisionManager" >
    <security:form-login
            username-parameter="username"
            password-parameter="password"
            authentication-success-handler-ref="successHandler"
            authentication-failure-handler-ref="failureHandler"

    />
   <security:custom-filter ref="filterSecurityInterceptor" before="FILTER_SECURITY_INTERCEPTOR"></security:custom-filter>

    </security:http>

    <bean id="successHandler" class="com.babynorth.security.LoginAuthenticationSuccessHandler">
        <property name="url" value="/test!test"></property>
    </bean>

    <bean id="failureHandler" class="com.babynorth.security.LoginAuthenticationFailureHandler">
        <property name="url" value="/login/login!main.action?error="></property>
        <property name="username" value="username"></property>
    </bean>

   <bean id="exceptionTranslationFilter"
          class="org.springframework.security.web.access.ExceptionTranslationFilter">

        <!--是在用户没有登录时用于引导用户进行登录认证的，在实际应用中应根据具体的认证机制选择对应的AuthenticationEntryPoint-->
        <property name="authenticationEntryPoint">
            <bean  class="com.babynorth.security.LoginUrlAuthenticationEntryPoint">
                <property name="loginFormUrl" value="/login/login!main.action"/>
            </bean>
        </property>
      <!--  用于在用户已经登录了，但是访问了其自身没有权限的资源时做出对应的处理-->
        <property name="accessDeniedHandler">
            <bean class="com.babynorth.security.MyAccessDeniedHandlerImpl">
                <property name="errorPage" value="/common/error/403.jsp" />
            </bean>
        </property>
    </bean>

   <bean id="filterSecurityInterceptor"
          class="org.springframework.security.web.access.intercept.FilterSecurityInterceptor">

        <!--验证-->
        <property name="authenticationManager" ref="authenticationManager" />

       <!--权限检查-->
        <property name="accessDecisionManager" ref="accessDecisionManager" />
        <!--得知当前请求是否在请求受保护的资源-->
        <property name="securityMetadataSource" ref="customSecurityMetadataSource" />
    </bean>
    <bean id="customSecurityMetadataSource" class="com.babynorth.security.CustomFilterInvocationSecurityMetadataSource"></bean>

    <bean id="accessDecisionManager" class="com.babynorth.security.MyAccessDecisionManager"></bean>


    <!--动态用户-->
   <security:authentication-manager alias="authenticationManager">
        <security:authentication-provider user-service-ref="customUserDetailsService"/>
   </security:authentication-manager>

   <bean id="customUserDetailsService" class="com.babynorth.security.CustomUserDetailsService" ></bean>


</beans>